// <auto-generated />
using System;
using FractalDemo.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FractalDemo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FractalDemo.Models.Categoria", b =>
                {
                    b.Property<int>("Categoria_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Categoria_Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Categoria_Id");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("FractalDemo.Models.Orden", b =>
                {
                    b.Property<int>("Orden_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Orden_Id"), 1L, 1);

                    b.Property<int?>("CantidadProducto")
                        .HasColumnType("int");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoPedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double?>("IGV")
                        .HasColumnType("float");

                    b.Property<double?>("MontoFinal")
                        .HasColumnType("float");

                    b.Property<double?>("MontoInicial")
                        .HasColumnType("float");

                    b.Property<int>("NumOrden")
                        .HasColumnType("int");

                    b.HasKey("Orden_Id");

                    b.ToTable("Ordenes", (string)null);
                });

            modelBuilder.Entity("FractalDemo.Models.OrdenProducto", b =>
                {
                    b.Property<int>("Orden_Id")
                        .HasColumnType("int");

                    b.Property<int>("Producto_Id")
                        .HasColumnType("int");

                    b.HasKey("Orden_Id", "Producto_Id");

                    b.HasIndex("Producto_Id");

                    b.ToTable("OrdenProducto", (string)null);
                });

            modelBuilder.Entity("FractalDemo.Models.Producto", b =>
                {
                    b.Property<int>("Producto_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Producto_Id"), 1L, 1);

                    b.Property<int>("Categoria_Id")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoProducto")
                        .HasColumnType("bit");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("float");

                    b.HasKey("Producto_Id");

                    b.HasIndex("Categoria_Id");

                    b.ToTable("Productos", (string)null);
                });

            modelBuilder.Entity("FractalDemo.Models.OrdenProducto", b =>
                {
                    b.HasOne("FractalDemo.Models.Orden", "Orden")
                        .WithMany("OrdenProducto")
                        .HasForeignKey("Orden_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FractalDemo.Models.Producto", "Producto")
                        .WithMany("OrdenProducto")
                        .HasForeignKey("Producto_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("FractalDemo.Models.Producto", b =>
                {
                    b.HasOne("FractalDemo.Models.Categoria", "Categoria")
                        .WithMany("Producto")
                        .HasForeignKey("Categoria_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("FractalDemo.Models.Categoria", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("FractalDemo.Models.Orden", b =>
                {
                    b.Navigation("OrdenProducto");
                });

            modelBuilder.Entity("FractalDemo.Models.Producto", b =>
                {
                    b.Navigation("OrdenProducto");
                });
#pragma warning restore 612, 618
        }
    }
}
